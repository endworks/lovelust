plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "org.jetbrains.kotlin.plugin.compose" version "2.1.0"
    // id 'org.jetbrains.kotlin.jvm' version '2.1.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.1.0'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "works.end.LoveLust"
    ndkVersion "27.0.12077973" // flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
        freeCompilerArgs += [
            "-Xopt-in=kotlin.RequiresOptIn"
        ]
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "works.end.LoveLust"
        // manifestPlaceholders = [applicationName: ".MainActivity"]
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 26 // flutter.minSdkVersion
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()// flutter.targetSdkVersion
        versionName flutterVersionName
        compileSdk flutter.compileSdkVersion
    }

    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    buildToolsVersion '35.0.0'
    compileSdk 35
}

composeCompiler {
    reportsDestination = layout.buildDirectory.dir("compose_compiler")
    /*featureFlags = setOf(
            ComposeFeatureFlag.StrongSkippingg.disabled(),
            ComposeFeatureFlag.OptimizeNonSkippingGroups,
            ComposeFeatureFlag.IntrinsicRemember
    )*/
}

flutter {
    source '../..'
}

dependencies {
    def composeBom = platform('androidx.compose:compose-bom:2024.12.01')
    implementation composeBom
    androidTestImplementation composeBom

    implementation("androidx.compose.foundation:foundation:1.8.0-alpha07")

    // Material Design 3
    implementation 'androidx.compose.material3:material3'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'

    implementation "com.android.billingclient:billing:7.1.1"
    implementation "com.android.billingclient:billing-ktx:7.1.1"
    implementation "com.google.android.gms:play-services-ads:23.6.0"
    implementation "androidx.health.connect:connect-client:1.1.0-alpha10"
    implementation "androidx.glance:glance:1.1.1"
    implementation "androidx.glance:glance-appwidget:1.1.1"
    implementation "androidx.glance:glance-material3:1.1.1"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.3"
}
