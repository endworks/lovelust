name: Windows

on:
  push:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Flutter setup
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Enable windows build
        run: flutter config --enable-windows-desktop

      - name: Test
        run: flutter test

      - name: Install 1Password CLI
        run: |
          wget "https://cache.agilebits.com/dist/1P/op2/pkg/v2.18.0/op_windows_amd64_v2.18.0.zip" -O op.zip
          tar -xf op.zip op
          mv "./op/op.exe"
          rm -r op.zip op

          op.exe user get --me

      - name: Get secrets
        run: |
          export AZURE_AD_TENANT_ID=$(op.exe read "op://end.works/Windows Store/azure ad tennant id")
          export AZURE_AD_CLIENT_ID=$(op.exe read "op://end.works/Windows Store/azure ad client id")
          export AZURE_AD_CLIENT_SECRET=$(op.exe read "op://end.works/Windows Store/azure ad client secret")
          export SELLER_ID=$(op.exe read "op://end.works/Windows Store/seller id")
          echo "AZURE_AD_TENANT_ID=$AZURE_AD_TENANT_ID" >> $GITHUB_ENV
          echo "AZURE_AD_CLIENT_ID=$AZURE_AD_CLIENT_ID" >> $GITHUB_ENV
          echo "AZURE_AD_CLIENT_SECRET=$AZURE_AD_CLIENT_SECRET" >> $GITHUB_ENV
          echo "SELLER_ID=$SELLER_ID" >> $GITHUB_ENV
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Get release name
        run: |
          echo "BUILD_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "BUILD_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$(git rev-list --count main)" >> $GITHUB_ENV

      - name: Build windows app
        run: flutter build windows --release --build-number=${{ env.BUILD_NUMBER }}

      - uses: microsoft/setup-msstore-cli@v1

      - name: Configure the Microsoft Store CLI
        run: msstore reconfigure --tenantId ${{ env.AZURE_AD_TENANT_ID }} --clientId ${{ env.AZURE_AD_CLIENT_ID }} --clientSecret ${{ env.AZURE_AD_CLIENT_SECRET }} --sellerId ${{ env.SELLER_ID }}

      - name: Create MSIX
        run: msstore package .

      - name: Publish MSIX to the Microsoft Store
        run: msstore publish -v
