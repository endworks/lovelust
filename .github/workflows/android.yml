name: Android

on:
  push:
    branches: ["main"]

permissions:
  contents: read

env:
  OP_VERSION: 2.19.0

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    outputs:
      apk: ${{ steps.output.outputs.apk }}
      app-bundle: ${{ steps.output.outputs.app-bundle }}
      mapping: ${{ steps.output.outputs.mapping }}
      debug-symbols: ${{ steps.output.outputs.debug-symbols }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Java setup
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: "gradle"

      - name: Flutter setup
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Disable telemetry
        run: flutter --disable-telemetry

      - name: Install dependencies
        run: flutter pub get

      - name: Test
        run: flutter test

      - name: Cache node modules
        id: cache-op
        uses: actions/cache@v3
        env:
          cache-name: cache-op
        with:
          path: /usr/local/bin/op
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.OP_VERSION }}

      - if: ${{ steps.cache-op.outputs.cache-hit != 'true' }}
        name: Install 1Password CLI
        run: |
          wget "https://cache.agilebits.com/dist/1P/op2/pkg/v$OP_VERSION/op_linux_amd64_v$OP_VERSION.zip" -O op.zip
          unzip -d op op.zip
          sudo mv op/op /usr/local/bin
          rm -r op.zip op

      - name: Get secrets
        run: |
          op read -o ./android/key.properties "op://end.works/Play Store keystore/key.properties"
          op read -o ./android/app/upload-keystore.jks "op://end.works/Play Store keystore/upload-keystore.jks"
          export SERVICE_ACCOUNT_JSON=$(op read "op://end.works/Google Play Console Service account/credential")
          echo "SERVICE_ACCOUNT_JSON=$SERVICE_ACCOUNT_JSON" >> $GITHUB_ENV
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Get release name
        run: |
          echo "COMMIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "COMMIT_NUMBER=$(git rev-list --count main)" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      - name: Generate release notes
        run: |
          mkdir whatsnew
          echo "<b>$COMMIT_HASH</b>: <i>$COMMIT_MESSAGE</i>" > whatsnew/whatsnew-en-US
          echo "<b>$COMMIT_HASH</b>: <i>$COMMIT_MESSAGE</i>" > whatsnew/whatsnew-es-ES

      - name: Build app bundle
        run: flutter build appbundle --build-number=${{ env.COMMIT_NUMBER }} --obfuscate --split-debug-info=out/android/

      - name: Release build to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ env.SERVICE_ACCOUNT_JSON }}
          packageName: works.end.LoveLust
          releaseFiles: ./build/app/outputs/bundle/release/app-release.aab
          mappingFile: ./build/app/outputs/mapping/release/mapping.txt
          debugSymbols: ./build/app/intermediates/merged_native_libs/release/out/lib
          whatsNewDirectory: whatsnew
          track: internal
          status: completed
          releaseName: "${{ env.COMMIT_BRANCH }} #${{ env.COMMIT_NUMBER }} (${{ env.COMMIT_HASH }})"
          # changesNotSentForReview: true
