name: Windows

on:
  push:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Flutter setup
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Enable windows build
        run: flutter config --enable-windows-desktop

      - name: Test
        run: flutter test

      - name: Install 1Password CLI
        run: |
          $arch = (Get-CimInstance Win32_OperatingSystem).OSArchitecture
          switch ($arch) {
              '64-bit' { $opArch = 'amd64'; break }
              '32-bit' { $opArch = '386'; break }
              Default { Write-Error "Sorry, your operating system architecture '$arch' is unsupported" -ErrorAction Stop }
          }
          $installDir = Join-Path -Path $pwd -ChildPath 'op'
          Invoke-WebRequest -Uri "https://cache.agilebits.com/dist/1P/op2/pkg/v2.18.0/op_windows_$($opArch)_v2.18.0.zip" -OutFile op.zip
          Expand-Archive -Path op.zip -DestinationPath $installDir -Force
          Remove-Item -Path op.zip
          Copy-Item "$installDir/op.exe" -Destination "./"

      - name: Get secrets
        run: |
          echo "AZURE_AD_TENANT_ID=$(./op.exe read "op://end.works/Windows Store/azure ad tennant id")" >> $GITHUB_ENV
          echo "AZURE_AD_CLIENT_ID=$(./op.exe read "op://end.works/Windows Store/azure ad client id")" >> $GITHUB_ENV
          echo "AZURE_AD_CLIENT_SECRET=$(./op.exe read "op://end.works/Windows Store/azure ad client secret")" >> $GITHUB_ENV
          echo "SELLER_ID=$(./op.exe read "op://end.works/Windows Store/seller id")" >> $GITHUB_ENV
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Get release name
        run: |
          echo "BUILD_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "BUILD_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$(git rev-list --count main)" >> $GITHUB_ENV

      - name: Variables
        run: |
          echo "${{ env.BUILD_BRANCH }}"
          echo "${{ env.BUILD_HASH }}"
          echo "${{ env.BUILD_NUMBER }}"
          echo "${{ env.AZURE_AD_TENANT_ID }}"
          echo "${{ env.AZURE_AD_CLIENT_ID }}"
          echo "${{ env.AZURE_AD_CLIENT_SECRET }}"
          echo "${{ env.SELLER_ID }}"

      - name: Build windows app
        run: flutter build windows --release --build-number=$BUILD_NUMBER

      - uses: microsoft/setup-msstore-cli@v1

      - name: Configure the Microsoft Store CLI
        run: msstore reconfigure --tenantId $AZURE_AD_TENANT_ID --clientId $AZURE_AD_CLIENT_ID --clientSecret $AZURE_AD_CLIENT_SECRET --sellerId $SELLER_ID

      - name: Create MSIX
        run: msstore package .

      - name: Publish MSIX to the Microsoft Store
        run: msstore publish -v
